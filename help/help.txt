Apache
=======

image - 
php:7.2-apache

Before execution below command -
root@docker-test:/home/apd/projects/prac-web-app/html# pwd
/home/apd/projects/prac-web-app/html

root@docker-test:/home/apd/projects/prac-web-app/html# docker run --rm -d -p 8080:80 --name my-apache-php-app -v "$PWD":/var/www/html php:7.2-apache

Apache without a Dockerfile -
docker run --rm -d -p HOST:CONTAINER --name my-apache-php-app -v "$PWD":/var/www/html php:7.2-apache
docker run --rm -d -p 8080:80 --name my-apache-php-app -v "$PWD":/var/www/html php:7.2-apache

Check -
root@docker-test:/home/apd/projects/prac-web-app/html# curl 192.168.1.15:8080
This is my web server


DataBase
=========

image - 
mariadb:latest

docker run --detach --name some-mariadb --env MARIADB_USER=example-user --env MARIADB_PASSWORD=my_cool_secret --env MARIADB_ROOT_PASSWORD=my-secret-pw  mariadb:latest
docker run --rm -itd --name mydb --env MARIADB_USER=test --env MARIADB_PASSWORD=test --env MARIADB_ROOT_PASSWORD=root mariadb:latest

or

$ docker network create some-network 
$ docker run --detach --network some-network --name some-mariadb --env MARIADB_USER=example-user --env MARIADB_PASSWORD=my_cool_secret --env MARIADB_ROOT_PASSWORD=my-secret-pw  mariadb:latest

Connect to MariaDB from the MySQL/MariaDB command line client -
$ docker run -it --network some-network --rm mariadb mariadb -hsome-mariadb -uexample-user -p

This image can also be used as a client for non-Docker or remote instances:
$ docker run -it --rm mariadb mariadb -h <server container IP> -u example-user -p

The log is available through Docker's container log:
$ docker logs some-mariadb


PHPMYADMIN
=========

image - 
phpmyadmin

Usage with arbitrary server -
You can use arbitrary servers by adding the environment variable PMA_ARBITRARY=1 to the startup command:

docker run --rm -itd --name phpmyadmin -d -e PMA_ARBITRARY=1 -p 8080:80 phpmyadmin
docker run --rm -itd --name phpmyadmin -d -e PMA_ARBITRARY=1 -p 9090:80 phpmyadmin

Usage with docker-compose and arbitrary server

Example docker-compose.yml
version: '3.1'

services:
  db:
    image: mariadb:10.6
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: notSecureChangeMe

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1

Get the DB server IP -

root@docker-test:/home/apd/projects/prac-web-app/html# docker inspect mydb

"NetworkSettings": {
            "Bridge": "",
            "SandboxID": "dbfd94ccea8a659b5d77583513ab4d5df887f535c1c058a4c74adaf1bcbeb38b",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {
                "3306/tcp": null
            },
            "SandboxKey": "/var/run/docker/netns/dbfd94ccea8a",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "cf21d51eb4048f6ad307b0b3e9754d5c96fd6fc094939018585ee3d4e229d1f0",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.3", <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< ****************





Image build
=========

Rename the docker file to  -
'Dockerfile'

Command -
docker build -t apd-ubu-apa:v1 .

Testing the image -

$ docker images
REPOSITORY    TAG          IMAGE ID       CREATED         SIZE
apd-ubu-apa   v1           0a01cd5acac2   9 seconds ago   229MB

$ docker run --rm -itd -p 8080:80 --name mywebserver 0a01cd5acac2



Docker - Compose
===================

Install Docker Compose -
root@docker-test:~# apt  install docker-compose

see https://docs.docker.com/compose/compose-file/
# Build images
docker-compose build

# Build and start
docker-compose up -d

docker-compose ps

docker-compose ls

docker-compose logs

docker-compose stop

# Remove all the containers
docker-compose rm

Docker Compose depends_on
==========================

depends_on is a Docker Compose keyword to set the order in which services must start and stop.

services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
  web-app:
    image: web-app:latest
    ports:
      - 8080:8080
    depends_on:
      - db


GIT HELP
=========
Remove unmounted volumes
# docker volume prune

list volumes
# docker volume ls

create volume
# docker volume create phpmount

check configs of vloume
# docker volume inspect phpmount

Remove volume
#  docker volume rm phpmount


GIT HELP
=========

GIT PUSH -
git push https://github.com/ifsemail9/prac-web-app.git







Docker Compose logs
===================

docker-compose logs <name-of-service>
for all services

docker-compose logs
Use the following options from the documentation:

Usage: logs [options] [SERVICE...]

Options:

--no-color Produce monochrome output.

-f, --follow Follow log output.

-t, --timestamps Show timestamps.

--tail="all" Number of lines to show from the end of the logs for each container.

Save the output
To save the output to a file you add the following to your logs command:

docker-compose logs -f -t >> myDockerCompose.log

Eg -

# docker compose ps
NAME                          IMAGE               COMMAND                  SERVICE             CREATED             STATUS              PORTS
docker-compose-db-1           mariadb             "docker-entrypoint.s…"   db                  About an hour ago   Up 13 minutes       3306/tcp
docker-compose-phpmyadmin-1   phpmyadmin          "/docker-entrypoint.…"   phpmyadmin          About an hour ago   Up 13 minutes       0.0.0.0:8081->80/tcp, :::8081->80/tcp
docker-compose-web-1          apdwebapp           "/bin/sh -c 'apachec…"   web                 13 minutes ago      Up 13 minutes       0.0.0.0:8080->80/tcp, :::8080->80/tcp

# docker compose logs web -f


Docker logs
===================

You can start Docker compose in detached mode and attach yourself to the logs of all container later. If you're done watching logs you can detach yourself from the logs output without shutting down your services.

Use docker-compose up -d to start all services in detached mode (-d) (you won't see any logs in detached mode)
Use docker-compose logs -f -t to attach yourself to the logs of all running services, whereas -f means you follow the log output and the -t option gives you timestamps (See Docker reference)
Use Ctrl + z or Ctrl + c to detach yourself from the log output without shutting down your running containers
If you're interested in logs of a single container you can use the docker keyword instead:

Use docker logs -t -f <name-of-service>

Save the output
To save the output to a file you add the following to your logs command:

docker-compose logs -f -t >> myDockerCompose.log




portainer
===========

docker run -d -p 8000:8000 -p 9000:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest

https://localhost:9443


Docker Compose start
===================

# docker-compose up -d
Creating dockercompose_db_1 ...
Creating dockercompose_portainer_1 ...
Creating dockercompose_db_1
Creating dockercompose_db_1 ... done
Creating dockercompose_web_1 ...
Creating dockercompose_phpmyadmin_1 ...
Creating dockercompose_phpmyadmin_1
Creating dockercompose_phpmyadmin_1 ... done

# docker-compose stop
Stopping dockercompose_phpmyadmin_1 ... done
Stopping dockercompose_web_1        ... done
Stopping dockercompose_portainer_1  ... done
Stopping dockercompose_db_1         ... done

# docker-compose rm
Going to remove dockercompose_phpmyadmin_1, dockercompose_web_1, dockercompose_portainer_1, dockercompose_db_1
Are you sure? [yN] y
Removing dockercompose_phpmyadmin_1 ... done
Removing dockercompose_web_1        ... done
Removing dockercompose_portainer_1  ... done
Removing dockercompose_db_1         ... done

------------------------------------------------------------------------------------------------------------------------

# docker compose up -d
[+] Building 0.0s (0/0)
[+] Running 4/4
 ✔ Container docker-compose-portainer-1   Started                                                                                                                                                                                                       1.2s
 ✔ Container docker-compose-db-1          Started                                                                                                                                                                                                       1.1s
 ✔ Container docker-compose-phpmyadmin-1  Started                                                                                                                                                                                                       2.0s
 ✔ Container docker-compose-web-1         Started  

# docker compose stop
[+] Stopping 4/4
 ✔ Container docker-compose-phpmyadmin-1  Stopped                                                                                                                                                                                                       1.3s
 ✔ Container docker-compose-portainer-1   Stopped                                                                                                                                                                                                       0.4s
 ✔ Container docker-compose-web-1         Stopped                                                                                                                                                                                                      10.6s
 ✔ Container docker-compose-db-1          Stopped    
 
# docker compose rm
? Going to remove docker-compose-phpmyadmin-1, docker-compose-web-1, docker-compose-portainer-1, docker-compose-db-1 Yes
[+] Removing 4/0
 ✔ Container docker-compose-db-1          Removed                                                                                                                                                                                                       0.0s
 ✔ Container docker-compose-phpmyadmin-1  Removed                                                                                                                                                                                                       0.0s
 ✔ Container docker-compose-web-1         Removed                                                                                                                                                                                                       0.0s
 ✔ Container docker-compose-portainer-1   Removed  

# docker-compose ps
           Name                         Command               State                                              Ports
------------------------------------------------------------------------------------------------------------------------------------------------------------------
dockercompose_db_1           docker-entrypoint.sh mariadbd    Up      3306/tcp
dockercompose_phpmyadmin_1   /docker-entrypoint.sh apac ...   Up      0.0.0.0:8081->80/tcp,:::8081->80/tcp
dockercompose_portainer_1    /portainer                       Up      0.0.0.0:8000->8000/tcp,:::8000->8000/tcp, 0.0.0.0:9000->9000/tcp,:::9000->9000/tcp, 9443/tcp
dockercompose_web_1          /bin/sh -c apachectl -D FO ...   Up      0.0.0.0:8080->80/tcp,:::8080->80/tcp



 
Docker Network
===================
# docker network ls
NETWORK ID     NAME                     DRIVER    SCOPE
e9228486a0d3   bridge                   bridge    local
05d8b1d4e2da   docker-compose_default   bridge    local
d928e51e146e   dockercompose_default    bridge    local
24a4dace3c9b   host                     host      local
3e6da7fd2194   none                     null      local

# docker network create test
f8dd3acecc9f55c8677b81cd4a73d5cc615f16e9044f4ffc9b4abfeb9eb11efa